/*!
 * @crofys/define-config-plugin v1.0.3
 * (c) 2020-2020 Russell
 * https://github.com/any86/any-touch
 * Released under the MIT License.
 */
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function t(e){if(e&&e.__esModule)return e;var t={};return e&&Object.keys(e).forEach((function(n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})})),t.default=e,t}var n=e(require("webpack")),r=e(require("fs"));function i(e){var t=function(e){return"/"===e.charAt(0)}(e),n="/"===a(e,-1);return(e=function(e,t){for(var n=0,r=e.length-1;r>=0;r--){var i=e[r];"."===i?e.splice(r,1):".."===i?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}(s(e.split("/"),(function(e){return!!e})),!t).join("/"))||t||(e="."),e&&n&&(e+="/"),(t?"/":"")+e}function o(){var e=Array.prototype.slice.call(arguments,0);return i(s(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))}function s(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}var a="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)};const c=e=>t=>t&&Object.prototype.toString.call(t)===`[object ${e}]`,u=c("RegExp"),f=c("Object"),l=(e,t)=>{try{const n=u(e)?e:new RegExp(e);return r.readdirSync(t).filter(e=>n.test(e)).map(e=>o(t,e))}catch(e){console.log("读取文件失败:",t)}return[]},p=(e,t,n)=>{try{r.writeFileSync(e,t,n)}catch(t){console.log("读取文件失败:",e)}};n.DefinePlugin;module.exports=class{constructor(e){if(!f(e))throw new Error("请传入参数");this.__PATH__=e.path||o(process.cwd(),"./config/"),this.__ENV__=e.env,this.__KEY__=e.key||"G_CONFIG"}apply(e){e.hooks.run.tapPromise("DefineConfigPlugin",async()=>{await this.init(e)}),e.hooks.watchRun.tapPromise("DefineConfigPlugin",async e=>{await this.init(e)})}async init(e){const{__KEY__:t}=this,r=await this.readConfigFile();this.handleGenerateFiles(r),new n.DefinePlugin({[t]:JSON.stringify(r)}).apply(e)}handleGenerateFiles(e){const t=[{name:__dirname+"/config.ts",template:"export default {{json}}".replace(/\{\{json\}\}/g,JSON.stringify(e,null,2))},{name:__dirname+"/global.d.ts",template:"import config from './config'\ndeclare global {\n  const G_CONFIG: typeof config\n}\nexport {}"}];for(const{name:e,template:n}of t)p(e,n)}async readConfigFile(){const{__PATH__:e,__ENV__:n}=this,r={default:{regExp:"config.?(default).?(ts|js)",value:{}},[n]:{regExp:`config.?(${n}).?(ts|js)`,value:{}}};for(const n in r){const[i]=l(r[n].regExp,e);if(i){const e=await new Promise((function(e){e(t(require(i)))}))||{default:{}};r[n].value=e.default}}return Object.assign({},r.default.value,r[n].value)}};

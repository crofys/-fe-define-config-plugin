/*!
 * define-config-plugin v0.1.0
 * (c) 2020-2020 Russell
 * https://github.com/any86/any-touch
 * Released under the MIT License.
 */
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function t(e){if(e&&e.__esModule)return e;var t={};return e&&Object.keys(e).forEach((function(n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})})),t.default=e,t}var n=e(require("webpack")),o=require("path"),r=e(require("fs"));const i=(a="RegExp",e=>e&&Object.prototype.toString.call(e)===`[object ${a}]`);var a;const s=(e,t)=>{try{const n=i(e)?e:new RegExp(e);return r.readdirSync(t).filter(e=>n.test(e)).map(e=>o.join(t,e))}catch(e){console.log("读取文件失败:",t)}return[]},c=(e,t,n)=>{try{r.writeFileSync(e,t,n)}catch(t){console.log("读取文件失败:",e)}},l=n.DefinePlugin;module.exports=class{constructor(e){this.__PATH__=e.path||o.join(process.cwd(),"./config/"),this.__ENV__=e.env,this.__KEY__=e.key||"G_CONFIG"}apply(e){e.hooks.run.tapPromise("DefineConfigPlugin",async e=>{await this.init(e)})}async init(e){const{__KEY__:t}=this,n=await this.readConfigFile();console.log(n,"===data"),this.handleGenerateFiles(n),new l({[t]:JSON.stringify(n)}).apply(e)}handleGenerateFiles(e){const t=[{name:__dirname+"/config.ts",template:"export default {{json}}".replace(/\{\{json\}\}/g,JSON.stringify(e,null,2))},{name:__dirname+"/global.d.ts",template:"import config from './config'\ndeclare global {\n  const G_CONFIG: typeof config\n}\nexport {}"}];for(const{name:e,template:n}of t)c(e,n)}async readConfigFile(){const{__PATH__:e,__ENV__:n}=this,o={default:{regExp:"config.?(default).?(ts|js)",value:{}},[n]:{regExp:`config.?(${n}).?(ts|js)`,value:{}}};for(const n in o){const[r]=s(o[n].regExp,e);if(r){const e=await new Promise((function(e){e(t(require(r)))}))||{default:{}};o[n].value=e.default}}return Object.assign({},o.default.value,o[n].value)}};

/*!
 * @crofys/define-config-plugin v1.0.1
 * (c) 2020-2020 Russell
 * https://github.com/any86/any-touch
 * Released under the MIT License.
 */
import t from"webpack";import e from"fs";function n(t){var e=function(t){return"/"===t.charAt(0)}(t),n="/"===o(t,-1);return(t=function(t,e){for(var n=0,r=t.length-1;r>=0;r--){var i=t[r];"."===i?t.splice(r,1):".."===i?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}(i(t.split("/"),(function(t){return!!t})),!e).join("/"))||e||(t="."),t&&n&&(t+="/"),(e?"/":"")+t}function r(){var t=Array.prototype.slice.call(arguments,0);return n(i(t,(function(t,e){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))}function i(t,e){if(t.filter)return t.filter(e);for(var n=[],r=0;r<t.length;r++)e(t[r],r,t)&&n.push(t[r]);return n}var o="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)};const s=t=>e=>e&&Object.prototype.toString.call(e)===`[object ${t}]`,a=s("RegExp"),c=s("Object"),l=(t,n)=>{try{const i=a(t)?t:new RegExp(t);return e.readdirSync(n).filter(t=>i.test(t)).map(t=>r(n,t))}catch(t){console.log("读取文件失败:",n)}return[]},f=(t,n,r)=>{try{e.writeFileSync(t,n,r)}catch(e){console.log("读取文件失败:",t)}},u=t.DefinePlugin;module.exports=class{constructor(t){if(!c(t))throw new Error("请传入参数");this.__PATH__=t.path||r(process.cwd(),"./config/"),this.__ENV__=t.env,this.__KEY__=t.key||"G_CONFIG"}apply(t){t.hooks.run.tapPromise("DefineConfigPlugin",async t=>{await this.init(t)})}async init(t){const{__KEY__:e}=this,n=await this.readConfigFile();this.handleGenerateFiles(n),new u({[e]:JSON.stringify(n)}).apply(t)}handleGenerateFiles(t){const e=[{name:__dirname+"/config.ts",template:"export default {{json}}".replace(/\{\{json\}\}/g,JSON.stringify(t,null,2))},{name:__dirname+"/global.d.ts",template:"import config from './config'\ndeclare global {\n  const G_CONFIG: typeof config\n}\nexport {}"}];for(const{name:t,template:n}of e)f(t,n)}async readConfigFile(){const{__PATH__:t,__ENV__:e}=this,n={default:{regExp:"config.?(default).?(ts|js)",value:{}},[e]:{regExp:`config.?(${e}).?(ts|js)`,value:{}}};for(const e in n){const[r]=l(n[e].regExp,t);if(r){const t=await import(r)||{default:{}};n[e].value=t.default}}return Object.assign({},n.default.value,n[e].value)}};
